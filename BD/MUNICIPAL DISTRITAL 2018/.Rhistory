library("Tidyverse")
library("ggplot2")
#Gráficos base ----
data|> ggplot() +
aes(x= lifeExp) +
geom_histogram()
#Gráficos base ----
data|> ggplot() +
aes(x= lifeExp) +
geom_histogram(binwidth=5,color="white")
hist(data$lifeExp)
data|> ggplot() +
aes(x= lifeExp) +
geom_histogram(binwidth=5,color="white")
data|> ggplot() +
aes(x= lifeExp) +
geom_boxplot()
data|> ggplot() +
aes(y= lifeExp) +
geom_boxplot()
data|> ggplot() +
aes(y= lifeExp) +
geom_boxplot(notch = TRUE, color="blue")
data|> ggplot() +
aes(x=lifeExp, y= gdpPercap) +
geom_point()
data|> ggplot() +
aes(y= lifeExp) +
geom_boxplot(notch = TRUE, color="blue")
data%>%
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data|>
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
library("tidyverse")
data|>
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data|>
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data%>%
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data%>%
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data|> ggplot() +
aes(x=lifeExp, y= gdpPercap) +
geom_point()
data%>%
ggplot() +
aes(x= lifeExp) +
aes(x= gdpPercap) +
geom_point() +
aes (color= continent)
data%>%
ggplot() +
aes(x= lifeExp) +
aes(y= gdpPercap) +
geom_point() +
aes (color= continent)
data%>%
ggplot() +
aes(x= lifeExp) +
aes(y= gdpPercap) +
geom_point() +
aes (color= continent) +
geom_smooth()
data%>%
filter(country=="Peru", year>1960)
data%>%
filter(country=="Peru", year>1960) %>%
ggplot()+
aes(x = year) +
aes(y= gdpPercap) +
geom_line () +
geom_point()
data %>%
select(country, continent) %>%
group_by(continent) %>%
filter(!duplicated(country)) %>%
ungroup() %>%
ggplot()
data %>%
select(country, continent) %>%
group_by(continent) %>%
data %>%
select(country, continent) %>%
View(data)
View(data)
data%>%
filter(country=="Peru", year>1960) %>%
ggplot()+
aes(x = year) +
aes(y= gdpPercap) +
geom_line () +
geom_point()
ggplot() +
aes(x= lifeExp) +
aes(y= gdpPercap) +
geom_point() +
aes (color= continent) +
geom_smooth()
#Clase de Fundamentos de R - 15/01/23 ----
install.packages("gapminder")
library("gapminder")
library("tidyverse")
data<- gapminder::gapminder
head(data,3)
install.packages("gapminder")
data%>%
ggplot() +
aes(x= lifeExp) +
aes(y= gdpPercap) +
geom_point() +
aes (color= continent) +
geom_smooth()
data %>%
select(country, continent) %>%
group_by(continent) %>%
filter(!duplicated(country)) %>%
ungroup() %>%
ggplot()+
aes(x = continent)+
geom_bar()
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent, fill=gdp_cat) +
geom_bar()  #<<
data %>%
filter(continent=="Oceania") %>%
ggplot()+
aes(x=year) +
aes(y=lifeExp) +
aes(color=country) +
geom_line() +  #<<
geom_point()  #<<
data %>%
filter(continent=="Oceania") %>%
ggplot()+
aes(x=year) +
aes(y=lifeExp) +
aes(group=country) +
geom_line() +  #<<
geom_point()  #<<
data %>%
filter(continent=="Oceania") %>%
ggplot()+
aes(x=year) +
aes(y=lifeExp) +
aes(color=country) +
geom_line() +  #<<
geom_point()  #<<
data %>%
ggplot() +
aes(x = lifeExp) +
aes(y = gdpPercap) +
geom_point() +
aes(color=continent) +
facet_wrap(~continent)
data %>%
filter(continent %in% c("Africa","Americas", "Europe")) %>%
filter(year==2007) %>%
mutate(gdp_cat=case_when(gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
ggplot() +
aes(x = lifeExp) +
aes(y = gdpPercap) +
geom_point() +
aes(color=continent) +
facet_grid(cols = vars(continent), rows = vars(gdp_cat))
data %>%
filter(continent %in% c("Africa","Americas", "Europe", "Asia")) %>%
filter(year==2007) %>%
mutate(gdp_cat=case_when(gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
ggplot() +
aes(x = lifeExp) +
aes(y = gdpPercap) +
geom_point() +
aes(color=continent) +
facet_grid(cols = vars(continent), rows = vars(gdp_cat))
data %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent, group=gdp_cat, color=gdp_cat)+
stat_summary(aes(y=gdpPercap),
fun ="mean",
geom="point") +
stat_summary(aes(y=gdpPercap),  #<<
fun ="mean",  #<<
geom="line")  #<<
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent)+ aes(y=gdpPercap) +
aes(color=continent) +
geom_boxplot()+
stat_summary(fun ="mean",
colour="red",
size = 5,
geom="point") +
stat_summary(fun ="median",  #<<
colour="blue",  #<<
size = 5,  #<<
geom="point")  #<<
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent)+ aes(y=gdpPercap) +
aes(color=continent) +
geom_boxplot()+
stat_summary(fun ="mean",
colour="red",
size = 5,
geom="point",
show.legend=TRUE) +
stat_summary(fun ="median",  #<<
colour="blue",  #<<
size = 5,  #<<
geom="point".
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent)+ aes(y=gdpPercap) +
aes(color=continent) +
geom_boxplot()+
stat_summary(fun ="mean",
colour="red",
size = 5,
geom="point",
show.legend=TRUE) +
stat_summary(fun ="median",  #<<
colour="blue",  #<<
size = 5,  #<<
geom="point",
show.legend=TRUE)  #<<
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent)+ aes(y=gdpPercap) +
aes(color=continent) +
geom_boxplot()+
stat_summary(fun ="mean",
colour="red",
size = 5,
geom="point") +
stat_summary(fun ="median",  #<<
colour="blue",  #<<
size = 5,  #<<
geom="point")  #<<
data %>%
select(-4, -5) %>%
mutate(gdp_cat=case_when(
gdpPercap<4000~ "Bajo GDPpc",
TRUE~ "Alto GDPpc")) %>%
filter(year==2007) %>%
ggplot()+
aes(x=continent)+ aes(y=gdpPercap) +
aes(color=continent) +
geom_boxplot()+
stat_summary(fun ="mean",
colour="red",
size = 5,
geom="point",
show.legend=TRUE) +
stat_summary(fun ="median",  #<<
colour="blue",  #<<
size = 5,  #<<
geom="point",
show.legend=TRUE)
data %>%
filter(continent == "Asia", year == 2007) %>%
ggplot() +
aes(x=gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha =0.7) +
scale_x_log10()+
labs(x = "GDP Per Capita",
y = "Life Expectancy")
data %>%
filter(continent=="Asia", year==2007) %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15))+
theme_gray()  #<<
#cambiamos la escala de uno de los ejes
data %>%
filter(continent == "Asia", year == 2007) %>%
ggplot() +
aes(x=gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha =0.7) +
scale_x_log10()+
labs(x = "GDP Per Capita",
y = "Life Expectancy")
data %>%
filter(continent=="Asia", year==2007) %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15))+
theme_gray()  #<<
install.packages("png")
install.packages("gifski")
install.packages("av")
install.packages("gganimate")
library(gganimate)
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15))
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year)
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year)+
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}")+
shadow_wake(0.5)
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) %>%
group_by(continent) %>%
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year)+
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}")+
shadow_wake(0.5)
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) +
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year) +
facet_wrap(~ continent) +
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}")+
shadow_wake(0.5)
#facet_grid
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) +
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year) +
facet_grid(.~ continent) +
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}")+
shadow_wake(0.5)
data %>%
ggplot()+
aes(x = gdpPercap, y = lifeExp,
size = pop, color = country) +
geom_point(show.legend = F, alpha = 0.7) +
scale_x_log10() +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy') +
scale_size(range = c(2, 15)) +
transition_time(year) +
facet_wrap(~ continent) +
labs(title = "Producto Bruto Interno vs Esperanza de Vida",
subtitle = "Year:{frame_time}")+
shadow_wake(0.5)
library(readxl)
library(ggplot2)
library(ggpol)
library(rio)
library(dplyr)
library(tidyverse)
library(magrittr)
library(ggmosaic)
library(mapsPERU)
library(sf)
setwd("C:/Users/hecto/OneDrive/Documents/GitHub/R_basics/BD/MUNICIPAL DISTRITAL 2018")
#Gráfico de barras dinámico por departamentos
autoridades18 <- read_xlsx("ERM2018_Autoridades_Distrital.xlsx")
autoridades14 <- read_xlsx("ERM2014_Autoridades_Distrital.xlsx")
autoridades10 <- read_xlsx("ERM2010_Autoridades_Distrital.xlsx")
autoridades06 <- read_xlsx("ERM2006_Autoridades_Distrital.xlsx")
autoridades02 <- read_xlsx("ERM2002_Autoridades_Distrital.xlsx")
autoridades18$año <- 2018
autoridades14$año <- 2014
autoridades10$año <- 2010
autoridades06$año <- 2006
autoridades02$año <- 2002
autoridades18 <- autoridades18 %>% select("Región", "Cargo electo", "año", "Sexo")
autoridades14 <- autoridades14 %>% select("Región", "Cargo electo", "año", "Sexo")
autoridades10 <- autoridades10 %>% select("Región", "Cargo electo", "año", "Sexo")
autoridades06 <- autoridades06 %>% select("Región", "Cargo electo", "año", "Sexo")
autoridades02 <- autoridades02 %>% select("Región", "Cargo electo", "año", "Sexo")
autoridades_final <- bind_rows(autoridades18, autoridades14, autoridades10, autoridades06, autoridades02)
#####
colnames(autoridades_final)[2] <- "Cargo"
autoridades_final_sum <- autoridades_final |>
group_by(Región, Cargo, año, Sexo) |>
summarize(count = n()) |>
mutate(Porcentaje = round(count / sum(count) * 100, digit=2))
#Alcalde distrital:
al_dist_sum<- autoridades_final_sum|>
filter(Sexo == "Femenino", Cargo == "ALCALDE DISTRITAL") |>
group_by(año) |>
arrange(año, desc(Porcentaje)) |>
mutate(ranking=row_number())%>%
filter(ranking <= 10)
animacion_al <- al_dist_sum |>
ggplot() +
geom_col(aes(ranking, Porcentaje, fill = Región )) +
geom_text(aes(ranking, Porcentaje, label = sprintf("%.2f", Porcentaje)), hjust=-0.1) +
geom_text(aes(ranking, y=0 , label = Región), hjust=1.1) +
geom_text(aes(x=6, y=max(Porcentaje) , label = as.factor(año)), vjust = 0.2, alpha = 0.5,  col = "gray", size = 20) +
coord_flip(clip = "off", expand = FALSE) + scale_x_reverse() +
theme_minimal() + theme(
panel.grid = element_blank(),
legend.position = "none",
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(2, 8, 4, 12, "cm")
) +
transition_states(año, state_length = 0, transition_length = 2) +
labs(title = "Porcentaje de participación femenina en las alcaldías distritales") +
xlab("Porcentaje de mujeres alcadesas distritales") +
enter_fade() +
exit_fade() +
ease_aes('quadratic-in-out')
